name: sphere

volumes:
  postgres-sphere-data:
  kafka-sphere-data:
  redis-sphere-data:

networks:
  backend-sphere:
    driver: bridge
    external: false
    name: backend-sphere

services:
  postgres:
    image: postgres:15.3-alpine
    volumes:
      - postgres-sphere-data:/var/lib/postgresql/data
    networks:
      - backend-sphere
    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}

  kafka:
    image: bitnami/kafka:3.9
    hostname: kafka_b
    networks:
      - backend-sphere
    ports:
      - '9092:9092'
      - '9094:9094'
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,EXTERNAL://kafka_b:9094
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_NUM_PARTITIONS=1
    volumes:
      - kafka-sphere-data:/var/lib/kafka/data

  rate-sender:
    image: lordbritishix/mock-fx-rate-sender
    networks:
      - backend-sphere
    command: ["http://host.docker.internal:8080/api/v1/exchange-rate"]